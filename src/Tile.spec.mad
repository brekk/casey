import { Just, Nothing } from "Maybe"
import String from "String"

import { caseN2, report } from "Study"

import { ENTITY_CORNER } from "@/Constants"
import { renderRooms } from "@/Render"
import {
  Cardinal,
  Neighbors,
  Tile,
  TileVoid,
  TileWall,
  atIndex,
  getCardinalNeighbors,
  getNeighbors,
  getPossibleCardinalPaths,
  makeTileMap,
  walkTileMap,
} from "@/Tile"



FIXTURE_TILE_MAP = makeTileMap(TileVoid, 12, 12)

modifyTestMap = where {
  Tile(_, x, y) =>
    Tile(x == 0 || x == 6 || y == 0 || y == 6 ? TileWall : TileVoid, x, y)
}

report(
  pipe(
    walkTileMap(modifyTestMap),
    renderRooms(6, 4),
    String.join("\n"),
  ),
  "walkTileMap",
  [
    #[
      FIXTURE_TILE_MAP,
      `⏺123456789▼1⏺
1⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆1
2⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆2
3⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆3
4⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆4
5⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆5
6123456789▼16
7⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆7
8⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆8
9⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆9
▶⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆◀
1⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆⋆1`,
    ],
  ],
)

report(
  caseN2(
    (x, y) => pipe(
      walkTileMap(modifyTestMap),
      atIndex($, x, y),
    )(FIXTURE_TILE_MAP),
  ),
  "atIndex",
  [#[#[5, 5], Just(Tile(TileVoid, 5, 5))], #[#[-1, 2], Nothing]],
)

report(
  caseN2(
    (x, y) => pipe(
      walkTileMap(modifyTestMap),
      getNeighbors($, x, y),
    )(FIXTURE_TILE_MAP),
  ),
  "getNeighbors",
  [
    #[
      #[11, 5],
      Neighbors(
        Nothing,
        Just(Tile(TileVoid, 11, 4)),
        Nothing,
        Just(Tile(TileVoid, 10, 4)),
        Just(Tile(TileWall, 11, 6)),
        Nothing,
        Just(Tile(TileWall, 10, 6)),
        Just(Tile(TileVoid, 10, 5)),
      ),
    ],
  ],
)

report(
  caseN2(
    (x, y) => pipe(
      walkTileMap(modifyTestMap),
      getCardinalNeighbors($, x, y),
    )(FIXTURE_TILE_MAP),
  ),
  "getCardinalNeighbors",
  [
    #[
      #[11, 5],
      Cardinal(
        Nothing,
        Just(Tile(TileVoid, 11, 4)),
        Just(Tile(TileWall, 11, 6)),
        Just(Tile(TileVoid, 10, 5)),
      ),
    ],
  ],
)

report(
  caseN2(
    (x, y) => pipe(
      walkTileMap(modifyTestMap),
      getPossibleCardinalPaths($, x, y),
    )(FIXTURE_TILE_MAP),
  ),
  "getPossibleCardinalPaths",
  [
    #[
      #[11, 5],
      [Just(Tile(TileVoid, 11, 4)), Just(Tile(TileWall, 11, 6)), Just(Tile(TileVoid, 10, 5))],
    ],
  ],
)
